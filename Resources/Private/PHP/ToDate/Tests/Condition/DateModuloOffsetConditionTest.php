<?php

namespace ToDate\Condition;

require_once TODATE_BASEDIR . '/ToDate/Condition/DateModuloOffsetCondition.php';

/**
 * Test class for DateModuloOffsetCondition.
 * Generated by PHPUnit on 2012-02-06 at 22:18:11.
 */
class DateModuloOffsetConditionTest extends \PHPUnit_Framework_TestCase {

	/**
	 *
	 * @var DateModuloOffsetCondition
	 */
	protected $condition;

	public function setUp() {
		$this->condition = new DateModuloOffsetCondition(new \DateTime('2012-02-09'),14);
	}
	
	/**
	 * @covers ToDate\Condition\DateModuloOffsetCondition::__construct
	 * @covers ToDate\Condition\DateModuloOffsetCondition::__toString
	 */
	public function testConstructor() {
		self::assertEquals('DateModulo = 2012-02-09%14d', (string)$this->condition);
	}
	
	
	/**
	 * @covers ToDate\Condition\DateModuloOffsetCondition::contains
	 */
	public function testContains() {
		self::assertFalse($this->condition->contains(new \DateTime('2012-02-08')));
		self::assertTrue($this->condition->contains(new \DateTime('2012-02-09')));
		self::assertFalse($this->condition->contains(new \DateTime('2012-02-10')));

		// next week
		self::assertFalse($this->condition->contains(new \DateTime('2012-02-22')));
		self::assertTrue($this->condition->contains(new \DateTime('2012-02-23')));
		self::assertFalse($this->condition->contains(new \DateTime('2012-02-24')));

		// 434 = 31 * 14 days later
		self::assertFalse($this->condition->contains(new \DateTime('2013-04-17')));
		self::assertTrue($this->condition->contains(new \DateTime('2013-04-18')));
		self::assertFalse($this->condition->contains(new \DateTime('2013-04-19')));

	}

	
}

?>